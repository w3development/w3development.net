<?xml version='1.0' encoding='utf-8'?>
<xliff xmlns:t3="http://typo3.org/schemas/xliff" version="1.0">
	<file t3:id="1416085778" source-language="en" datatype="plaintext" original="messages" date="2015-07-27T18:40:23Z" product-name="scheduler" target-language="it">
		<header/>
		<body>
			<trans-unit id="testTask.name" xml:space="preserve">
				<source>Scheduler test task</source>
			<target></target></trans-unit>
			<trans-unit id="testTask.description" xml:space="preserve">
				<source>The Scheduler test task just sends a mail to a given email address. It is designed to be used for testing purposes.</source>
			<target></target></trans-unit>
			<trans-unit id="sleepTask.name" xml:space="preserve">
				<source>Scheduler sleep task</source>
			<target></target></trans-unit>
			<trans-unit id="sleepTask.description" xml:space="preserve">
				<source>This task does nothing but put PHP to sleep for a number of seconds. It is designed to test multiple executions.</source>
			<target></target></trans-unit>
			<trans-unit id="cachingFrameworkGarbageCollection.name" xml:space="preserve">
				<source>Caching framework garbage collection</source>
			<target></target></trans-unit>
			<trans-unit id="cachingFrameworkGarbageCollection.description" xml:space="preserve">
				<source>This task calls the garbage collection of configured caching framework caches which use one of the selected backends. This will free some space in cache backends which do not have an internal garbage collection. In case of the default database backend it is advisable to run this task once a day when the database is mostly idle.</source>
			<target></target></trans-unit>
			<trans-unit id="fileIndexing.name" xml:space="preserve">
				<source>[OBSOLETE] File Abstraction Layer: Indexing job</source>
			<target></target></trans-unit>
			<trans-unit id="fileIndexing.description" xml:space="preserve">
				<source>Runs indexing tasks based on an indexing configuration and a storage/folder information.</source>
			<target></target></trans-unit>
			<trans-unit id="fileStorageIndexing.name" xml:space="preserve">
				<source>File Abstraction Layer: Update storage index</source>
			<target></target></trans-unit>
			<trans-unit id="fileStorageIndexing.description" xml:space="preserve">
				<source>Updates the Index/Cache Data of a Storage; only needed if changes to the storage are possible outside the backend (FTP, RemoteStorages).</source>
			<target></target></trans-unit>
			<trans-unit id="fileStorageExtraction.name" xml:space="preserve">
				<source>File Abstraction Layer: Extract metadata in storage</source>
			<target></target></trans-unit>
			<trans-unit id="fileStorageExtraction.description" xml:space="preserve">
				<source>Extracts metadata for all files in storage which have been changed since last run.</source>
			<target></target></trans-unit>
			<trans-unit id="tableGarbageCollection.name" xml:space="preserve">
				<source>Table garbage collection</source>
			<target></target></trans-unit>
			<trans-unit id="tableGarbageCollection.description" xml:space="preserve">
				<source>Task to delete old entries from specific tables like sys_log. Use $GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['scheduler']['tasks']['tx_scheduler_TableGarbageCollection']['options']['tables'] to configure tables. Refer to the manual for more details.</source>
			<target></target></trans-unit>
			<trans-unit id="recyclerGarbageCollection.name" xml:space="preserve">
				<source>Fileadmin garbage collection</source>
			<target></target></trans-unit>
			<trans-unit id="recyclerGarbageCollection.description" xml:space="preserve">
				<source>This task empties all "_recycler_" folders below fileadmin. This helps free some space in the file system.</source>
			<target></target></trans-unit>
		</body>
	</file>
</xliff>
